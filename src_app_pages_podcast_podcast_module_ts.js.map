{"version":3,"file":"src_app_pages_podcast_podcast_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEV;AAE7C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sDAAW;KACvB;CACF,CAAC;IAMW,wBAAwB,SAAxB,wBAAwB;CAAG;AAA3B,wBAAwB;IAJpC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,wBAAwB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBI;AACM;AACF;AAEA;AAEuB;AAEvB;IAWhC,iBAAiB,SAAjB,iBAAiB;CAAG;AAApB,iBAAiB;IAT7B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,6EAAwB;SACzB;QACD,YAAY,EAAE,CAAC,sDAAW,CAAC;KAC5B,CAAC;GACW,iBAAiB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBgC;AACrB;AACT;AACuC;AACL;AACJ;AACI;IAOrD,WAAW,SAAX,WAAW;IAStB,YACU,UAAsB,EACtB,cAA8B,EAC9B,cAA8B,EAC9B,YAA8B,EAC9B,YAA0B,EAC1B,MAAc;QALd,eAAU,GAAV,UAAU,CAAY;QACtB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAkB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QAbxB,eAAU,GAAQ,eAAe,CAAC;QAClC,kBAAa,GAAQ,CAAC,CAAC;QACvB,gBAAW,GAAQ,GAAG,CAAC;QAEvB,qBAAgB,GAAQ,IAAI,CAAC;IAUzB,CAAC;IAEL,QAAQ;QACN,8CAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE;YAC9B,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;gBACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;gBAC7C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC;aAC9D;YAAA,CAAC;YAEF,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,EAAE;gBACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACxC,IAAI,CAAC,YAAY,EAAE,CAAC;gBAEpB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;oBACnD,IAAI,QAAQ,GAAQ,GAAG,CAAC;oBACxB,IAAI,QAAQ,CAAC,eAAe,IAAI,QAAQ,CAAC,MAAM,IAAI,SAAS,EAAE;wBAC5D,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;wBAChC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;qBAClD;gBACH,CAAC,CAAC,CAAC;aACJ;QAEH,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,cAAc,CAAC,KAAK,EAAE,EAAE;QACtB,sBAAsB;QACtB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;QACrH,mEAAmE;IACrE,CAAC;IAED,YAAY,CAAC,KAAK,EAAE,EAAE;QACpB,IAAI,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;QAEpD,IAAI,KAAK,IAAI,CAAC,EAAE;YACd,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC;SAChC;aAAM,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,EAAE,EAAE;YACnC,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC;SAChC;aAAM,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,IAAI,EAAE,EAAE;YACpC,IAAI,CAAC,UAAU,GAAG,eAAe,CAAC;SACnC;aAAM,IAAI,KAAK,GAAG,EAAE,EAAE;YACrB,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,eAAe,CAAC;SACnC;IACH,CAAC;IAED,WAAW,CAAC,EAAE;QACZ,sFAAsF;QACtF,8BAA8B;QAE9B,2CAA2C;QAC3C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;YAC3D,IAAI,oBAAoB,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACxI,iDAAiD;YACjD,IAAI,CAAC,aAAa,GAAG,oBAAoB,CAAC;SAC3C;QAED,wDAAwD;QACxD,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,KAAK,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE;YAC1J,QAAQ,CAAC,cAAc,CAAC,SAAS,GAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC;YAC/D,QAAQ,CAAC,cAAc,CAAC,UAAU,GAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;SAC/D;QAED,IAAI,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;QACjG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC;IAC1D,CAAC;IAED,UAAU,CAAC,EAAE;QACX,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QAClD,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;QAChC,oEAAoE;QACpE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IACvB,CAAC;IAED,YAAY,CAAC,EAAE;QACb,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QAClD,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;QAChC,sEAAsE;QACtE,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;IACzB,CAAC;IAEK,IAAI,CAAC,EAAE;;YACX,IAAI,UAAU,GAAQ,MAAM,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YAE/D,IAAI,UAAU,CAAC,MAAM,IAAI,QAAQ,IAAI,UAAU,CAAC,YAAY,IAAI,OAAO,EAAE;gBACvE,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;gBAE/B,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aACnB;iBAAM,IAAI,UAAU,CAAC,MAAM,IAAI,QAAQ,IAAI,UAAU,CAAC,YAAY,IAAI,MAAM,EAAE;gBAC7E,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gBAE5C,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aACnB;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aACnB;QAEH,CAAC;KAAA;IAED,KAAK,CAAC,EAAE;QACN,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YAC5C,IAAI,QAAQ,GAAQ,GAAG,CAAC;YACxB,IAAI,QAAQ,CAAC,YAAY,IAAI,SAAS,IAAI,QAAQ,CAAC,MAAM,IAAI,QAAQ,EAAE;gBACrE,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;aAC3C;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,kDAAkD;QAClD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAChC,CAAC;IAED,qBAAqB,CAAC,KAAK,EAAE,YAAY;QAEvC,IAAG,KAAK,CAAC,UAAU,GAAG,CAAC,EAAE;YACvB,IAAI,YAAY,KAAK,UAAU,EAAE;gBAC/B,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;aAC/B;iBAAM,IAAI,YAAY,KAAK,aAAa,EAAE;gBACzC,IAAI,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC;aAClC;YAED,IAAI,OAAO,GAAQ,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC;YAC7C,IAAI,GAAG,GAAG,QAAQ,GAAG,OAAO,CAAC;YAC7B,IAAI,GAAG,GAAQ,GAAG,GAAG,EAAE,CAAC;YACxB,IAAI,OAAO,GAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;YACxC,IAAI,KAAK,GAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;YAEtC,IAAG,OAAO,GAAG,EAAE,EAAC;gBACd,OAAO,GAAG,GAAG,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;aACpC;YAED,IAAG,KAAK,GAAG,CAAC,EAAC;gBACX,IAAI,aAAa,GAAG,KAAK,GAAG,GAAG,GAAG,OAAO,GAAG,GAAG,GAAG,OAAO,CAAC;gBAC1D,OAAO,aAAa,CAAC;aACtB;iBAAM;gBACL,IAAI,aAAa,GAAG,OAAO,GAAG,GAAG,GAAG,OAAO,CAAC;gBAC5C,OAAO,aAAa,CAAC;aACtB;SAEF;IAEH,CAAC;IAED,YAAY;QACV,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,UAAU,EAAE;YAClC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBAC5C,IAAI,QAAQ,GAAQ,GAAG,CAAC;gBACxB,IAAI,QAAQ,CAAC,YAAY,IAAI,SAAS,IAAI,QAAQ,CAAC,MAAM,IAAI,QAAQ,EAAE;oBACrE,QAAQ,CAAC,cAAc,CAAC,SAAS,GAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;oBAC9E,QAAQ,CAAC,cAAc,CAAC,UAAU,GAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC;iBAClF;YACH,CAAC,CAAC;SACH;IACH,CAAC;IAED,QAAQ,CAAC,EAAE;QACT,IAAI,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;QAC9F,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAErD,8DAA8D;QAC5D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC7B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC7B,IAAI;IACN,CAAC;IAED,SAAS,CAAC,KAAK;QACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QAElC,UAAU,CAAC,GAAG,EAAE;YACd,4CAA4C;YAC5C,sGAAsG;YACtG,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QAC1B,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;CAEF;;YA7MmB,qDAAU;YAIrB,4EAAc;YAEd,4EAAc;YAHd,iFAAgB;YAEhB,wEAAY;YAJZ,mDAAM;;AAYF,WAAW;IALvB,wDAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,uKAAkC;;KAEnC,CAAC;GACW,WAAW,CAgMvB;AAhMuB;;;;;;;;;;;;;;;ACbxB,iEAAe,wJAAwJ,mBAAmB,wCAAwC,2CAA2C,6HAA6H,mXAAmX,8fAA8f,6HAA6H,eAAe,6BAA6B,gBAAgB,mJAAmJ,6DAA6D,qBAAqB,qbAAqb,kBAAkB,2FAA2F,8HAA8H,uCAAuC,wIAAwI,yCAAyC,oIAAoI,sCAAsC,oIAAoI,sCAAsC,uIAAuI,uCAAuC,8ZAA8Z","sources":["./src/app/pages/podcast/podcast-routing.module.ts","./src/app/pages/podcast/podcast.module.ts","./src/app/pages/podcast/podcast.page.ts","./src/app/pages/podcast/podcast.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PodcastPage } from './podcast.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PodcastPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PodcastPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PodcastPageRoutingModule } from './podcast-routing.module';\n\nimport { PodcastPage } from './podcast.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PodcastPageRoutingModule\n  ],\n  declarations: [PodcastPage]\n})\nexport class PodcastPageModule {}\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { interval } from 'rxjs';\nimport { LiveRadioService } from 'src/app/services/live-radio.service';\nimport { PodcastService } from 'src/app/services/podcast.service';\nimport { ShowsService } from 'src/app/services/shows.service';\nimport { StorageService } from 'src/app/services/storage.service';\n\n@Component({\n  selector: 'app-podcast',\n  templateUrl: './podcast.page.html',\n  styleUrls: ['./podcast.page.scss'],\n})\nexport class PodcastPage implements OnInit {\n\n  volumeType: any = \"volume-medium\";\n  durationRange: any = 0;\n  volumeRange: any = 100;\n\n  playingPodcastID: any = null;\n  podcasts: any;\n\n  constructor(\n    private ElementRef: ElementRef,\n    private PodcastService: PodcastService,\n    private StorageService: StorageService,\n    private radioService: LiveRadioService,\n    private ShowsService: ShowsService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    interval(500).subscribe((func => {\n      if (this.podcasts == null) {\n        this.podcasts = this.PodcastService.podcasts;\n        this.playingPodcastID = this.PodcastService.playingPodcastID;\n      };\n\n      if (this.playingPodcastID != null) {\n        this.rangeSlider(this.playingPodcastID);\n        this.localStorage();\n\n        this.StorageService.get(\"outsidePodcast\").then(res => {\n          let response: any = res;\n          if (response.pauseFrmOutside && response.Status == \"podcast\") {\n            this.pause(response.podcastsID);\n            this.StorageService.removeItem(\"outsidePodcast\");\n          }\n        });\n      }\n  \n    }));\n  }\n\n  durationChange(event, id) {\n    // console.log(event);\n    this.PodcastService.podcasts[id].audio.currentTime = this.PodcastService.podcasts[id].audio.duration * (event / 100);\n    // console.log(this.PodcastService.podcasts[id].audio.currentTime);\n  }\n\n  volumeChange(event, id) {\n    let vol = event / 100;\n    this.PodcastService.podcasts[id].audio.volume = vol;\n\n    if (event <= 5) {\n      this.volumeType = \"volume-off\";\n    } else if (event > 5 && event <= 25) {\n      this.volumeType = \"volume-low\";\n    } else if (event > 25 && event <= 75) {\n      this.volumeType = \"volume-medium\";\n    } else if (event > 75) {\n      this.volumeType = \"volume-high\";\n    } else {\n      this.volumeType = \"volume-medium\";\n    }\n  }\n\n  rangeSlider(id) {\n    // let audioRangeSlider = this.ElementRef.nativeElement.querySelector('#duration'+id);\n    // audioRangeSlider.value = 0;\n\n    // DURATION RANGE:::: working using ngmodel\n    if (!isNaN(this.PodcastService.podcasts[id].audio.duration)) {\n      let audioCurrentPosition = this.PodcastService.podcasts[id].audio.currentTime * (100 / this.PodcastService.podcasts[id].audio.duration);\n      // audioRangeSlider.value = audioCurrentPosition;\n      this.durationRange = audioCurrentPosition;\n    }\n\n    // IF THE SONG IS ENDS THE PLAY BUTTON SHOULD BE ENABLED\n    if (this.PodcastService.podcasts[id].audio.ended || this.PodcastService.podcasts[id].audio.duration === this.PodcastService.podcasts[id].audio.currentTime) {\n      document.getElementById('playBTN'+id).style.display = \"inline\";\n      document.getElementById('pauseBTN'+id).style.display = \"none\";\n    }\n\n    let duration = this.audioDurationFunction(this.PodcastService.podcasts[id].audio, \"currentTime\");\n    this.PodcastService.podcasts[id].CurrentTime = duration;\n  }\n\n  muteVolume(id) {\n    this.PodcastService.podcasts[id].audio.volume = 0;\n    this.volumeType = \"volume-mute\";\n    // this.ElementRef.nativeElement.querySelector(\"#volume\").value = 0;\n    this.volumeRange = 0;\n  }\n\n  unmuteVolume(id) {\n    this.PodcastService.podcasts[id].audio.volume = 1;\n    this.volumeType = \"volume-high\";\n    // this.ElementRef.nativeElement.querySelector(\"#volume\").value = 100;\n    this.volumeRange = 100;\n  }\n\n  async play(id) {\n    let playingRes: any = await this.StorageService.get(\"playing\");\n\n    if (playingRes.Status == \"played\" && playingRes.PlayingMedia == \"radio\") {\n      this.radioService.pauseRadio();\n      \n      this.playFunc(id);\n    } else if (playingRes.Status == \"played\" && playingRes.PlayingMedia == \"show\") {\n      this.ShowsService.pause(playingRes.showsID);\n\n      this.playFunc(id);\n    } else {\n      this.playFunc(id);\n    }\n\n  }\n\n  pause(id) {\n    this.StorageService.get(\"playing\").then(res => {\n      let response: any = res;\n      if (response.PlayingMedia == \"podcast\" && response.Status == \"played\") {\n        this.StorageService.removeItem(\"playing\");\n      } \n    });\n\n    this.playingPodcastID = id;\n    // this.PodcastService.podcasts[id].audio.pause();\n    this.PodcastService.pause(id);\n  }\n\n  audioDurationFunction(audio, durationType) {\n\n    if(audio.readyState > 0) {\n      if (durationType === \"duration\") {\n        var duration = audio.duration;\n      } else if (durationType === \"currentTime\") {\n        var duration = audio.currentTime;\n      }\n\n      var seconds: any = Math.floor(duration % 60);\n      var foo = duration - seconds;\n      var min: any = foo / 60;\n      var minutes: any = Math.floor(min % 60);\n      var hours: any = Math.floor(min / 60);\n\n      if(seconds < 10){\n        seconds = \"0\" + seconds.toString();\n      }\n\n      if(hours > 0){\n        let audioDuration = hours + \":\" + minutes + \":\" + seconds;\n        return audioDuration;\n      } else {\n        let audioDuration = minutes + \":\" + seconds;\n        return audioDuration;\n      }\n      \n    }\n\n  }\n\n  localStorage() {\n    if (this.router.url === \"/podcast\") {\n      this.StorageService.get(\"playing\").then(res => {\n        let response: any = res;\n        if (response.PlayingMedia == \"podcast\" && response.Status == \"played\") {\n          document.getElementById('playBTN'+response.podcastsID).style.display = \"none\";\n          document.getElementById('pauseBTN'+response.podcastsID).style.display = \"inline\";\n        } \n      })\n    }\n  }\n\n  playFunc(id) {\n    let duration = this.audioDurationFunction(this.PodcastService.podcasts[id].audio, \"duration\");\n    this.PodcastService.podcasts[id].duration = duration;\n\n    // if(this.PodcastService.podcasts[id].audio.readyState > 0) {\n      this.PodcastService.play(id);\n      this.playingPodcastID = id;\n    // }\n  }\n\n  doRefresh(event) {\n    this.router.navigate(['podcast']);\n\n    setTimeout(() => {\n      // console.log('Async operation has ended');\n      // this.loadingService.alertMessage(\"Please check Your internet connection\", \"no internet connection\")\n      event.target.complete();\n    }, 500);\n  }\n\n}\n","export default \"<ion-header [translucent]=\\\"true\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <!-- <ion-title>shoutOut</ion-title> -->\\n    <h1 style=\\\"margin: 0; padding-left: 10px;\\\">\\n      <span style=\\\"color: #de2341;\\\">Tesa </span> <span style=\\\"color: white;\\\">Radio</span>\\n    </h1>\\n\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-menu-button menu=\\\"main-menu\\\" style=\\\"color: white;\\\"></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <!-- Do ReFresh -->\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col \\n        *ngFor =\\\"let podcast of podcasts; let i=index\\\"\\n        size-xs=\\\"12\\\" size-sm=\\\"6\\\" size-md=\\\"6\\\" size-lg=\\\"4\\\" size-xl=\\\"3\\\"\\n      >\\n        <ion-grid class=\\\"podcast-main-content\\\">\\n          <ion-row>\\n            <ion-col size=\\\"3\\\" class=\\\"play-pause-col\\\">\\n              <span class=\\\"playBtnCover\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"play\\\" [id]=\\\"'playBTN'+i\\\" (click)=\\\"play(i)\\\"></ion-icon>\\n                <ion-icon slot=\\\"start\\\" name=\\\"pause\\\" [id]=\\\"'pauseBTN'+i\\\" (click)=\\\"pause(i)\\\" style=\\\"display: none;\\\"></ion-icon>\\n              </span>\\n            </ion-col>\\n      \\n            <ion-col size=\\\"9\\\">\\n              <h2>{{podcast.title}}</h2>\\n\\n              <h4>{{podcast.author}}</h4>\\n\\n              <div class=\\\"duration-volume-controls\\\" *ngIf=\\\"playingPodcastID === i\\\">\\n\\n                <!-- <span style=\\\"width: 100%;\\\"> -->\\n                  <span class=\\\"played-duration\\\">{{podcast.CurrentTime}}</span>\\n                  <input type=\\\"range\\\" [id]=\\\"'duration'+i\\\" class=\\\"duration\\\" min=\\\"0\\\" max=\\\"100\\\" value=\\\"0\\\" [(ngModel)]=\\\"durationRange\\\" (ngModelChange)=\\\"durationChange($event, i)\\\">\\n                  <!-- <input type=\\\"range\\\" id=\\\"duration\\\" min=\\\"0\\\" max=\\\"100\\\" value=\\\"0\\\"  [(ngModel)]=\\\"range\\\" (ngModelChange)=\\\"range=durationChangeNew($event, points)\\\"> -->\\n                  <span class=\\\"total-duration\\\">{{podcast.duration}}</span>\\n                <!-- </span> -->\\n\\n                <!-- <span style=\\\"width: 40%;\\\"> -->\\n                  <ion-icon name=\\\"volume-high\\\" (click)=\\\"muteVolume(i)\\\" class=\\\"mute-unmute-volume\\\" [ngClass]=\\\"{'active': volumeType === 'volume-high'}\\\" ></ion-icon>\\n                  <ion-icon name=\\\"volume-medium\\\" (click)=\\\"muteVolume(i)\\\" class=\\\"mute-unmute-volume\\\" [ngClass]=\\\"{'active': volumeType === 'volume-medium'}\\\"></ion-icon>\\n                  <ion-icon name=\\\"volume-low\\\" (click)=\\\"muteVolume(i)\\\" class=\\\"mute-unmute-volume\\\" [ngClass]=\\\"{'active': volumeType === 'volume-low'}\\\"></ion-icon>\\n                  <ion-icon name=\\\"volume-off\\\" (click)=\\\"muteVolume(i)\\\" class=\\\"mute-unmute-volume\\\" [ngClass]=\\\"{'active': volumeType === 'volume-off'}\\\"></ion-icon>\\n                  <ion-icon name=\\\"volume-mute\\\" (click)=\\\"unmuteVolume(i)\\\" class=\\\"mute-unmute-volume\\\" [ngClass]=\\\"{'active': volumeType === 'volume-mute'}\\\"></ion-icon>\\n\\n                  <input type=\\\"range\\\" [id]=\\\"'volume'+i\\\" class=\\\"volume\\\" min=\\\"0\\\" max=\\\"100\\\" value=\\\"'100'\\\" [(ngModel)]=\\\"volumeRange\\\" (ngModelChange)=\\\"volumeChange($event, i)\\\">\\n                <!-- </span> -->\\n\\n              </div>\\n      \\n            </ion-col>\\n\\n          </ion-row>\\n        </ion-grid>\\n\\n      </ion-col>\\n\\n    </ion-row>\\n  </ion-grid>\\n\\n</ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}