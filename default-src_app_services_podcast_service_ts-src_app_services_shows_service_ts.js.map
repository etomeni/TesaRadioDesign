{"version":3,"file":"default-src_app_services_podcast_service_ts-src_app_services_shows_service_ts.js","mappings":"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","sources":["./src/app/services/database.service.ts","./src/app/services/podcast.service.ts","./src/app/services/shows.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from '@angular/fire/compat/database';\n\n// import { Firestore, collection, collectionData, doc, docData, addDoc, deleteDoc, updateDoc, getDocs } from '@angular/fire/firestore';\n// import { Observable } from 'rxjs';\n \nexport interface Note {\n  id?: string;\n  title: string;\n  text: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n\n  constructor(\n    private realtimeDB: AngularFireDatabase,\n    // private firestore: Firestore,\n  ) { }\n\n\n  // getMultipleDBdata(path: string): Observable<Note[]> {\n  //   const notesRef = collection(this.firestore, path);\n  //   return collectionData(notesRef) as Observable<Note[]>;\n  // }\n\n  // getDBdataById(path: string, id): Observable<Note> {\n  //   const noteDocRef = doc(this.firestore, `notes/${id}`);\n  //   return docData(noteDocRef, { idField: 'id' }) as Observable<Note>;\n  // }\n\n  // async getFirestore(path: string) {\n  //   try {\n  //     const querySnapshot = await getDocs(collection(this.firestore, path));\n  //     querySnapshot.forEach((doc) => {\n  //       console.log(`${doc.id} => ${doc.data()}`);\n  //     });\n  //   } catch (error) {\n  //     return error;\n  //     console.error(\"Error adding document: \", error);\n  //   }\n    \n  // }\n \n  // addToDB(path: string, data: any) {\n  //   try {\n  //     const collectionRef = collection(this.firestore, path);\n  //     const docRef: any = addDoc(collectionRef, data);\n  //     return docRef;\n  //     console.log(\"Document written with ID: \", docRef.id);\n  //   } catch (error) {\n  //     return error;\n  //     console.error(\"Error adding document: \", error);\n  //   }\n  // }\n \n  // deleteDb(path: string) {\n  //   try {\n  //     const docRef = doc(this.firestore, path);\n  //     return deleteDoc(docRef);\n  //     // await deleteDoc(doc(this.firestore, \"cities\", \"DC\"));\n  //   } catch (error) {\n  //     return error;\n  //     console.error(\"Error updating document: \", error);\n  //   }\n  // }\n \n  // updateDB(path: string, dataObj: any) {\n  //   try {\n  //     const noteDocRef = doc(this.firestore, path);\n  //     const updateDb = updateDoc(noteDocRef, dataObj);\n  //     return updateDb;\n  //   } catch (error) {\n  //     return error;\n  //     console.error(\"Error updating document: \", error);\n  //   }\n  // }\n\n\n  // THE FOLLOWING IS FOR THE COMPACTIBLE REALTIME DATABASE\n  \n  getRealtimeDBdata(path:any) {\n    let dbPath = this.realtimeDB.database.ref(path);\n    return new Promise<any> ((resolve, reject) => {\n      this.realtimeDB.object(dbPath).valueChanges().subscribe (\n        res=>resolve(res),\n        error=>reject(error)\n      )\n    })\n  }\n\n  saveToRealtimeDataDB(path: string, objData: object) {\n    // save in firebase real time database\n    // this.realtimeDB.object(path).set(objData).then( () => {\n    //   return \"true\";\n    // }).catch( ()=> {\n    //   return false;\n    // });\n\n    return new Promise<any> ( (resolve, reject) => {\n      this.realtimeDB.object(path).set(objData).then (\n        res=>resolve(true),\n        error=>reject(false)\n      )\n    })\n\n  }\n\n  updateRealtimeDBdata(path: string, objData: object) {\n\n    return new Promise<any> ( (resolve, reject) => {\n      this.realtimeDB.object(path).update(objData).then (\n        res=>resolve(true),\n        error=>reject(false)\n      )\n    })\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\nimport { Router } from '@angular/router';\nimport { DatabaseService } from './database.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PodcastService {\n\n  playingPodcastID: any = null;\n\n  podcasts: any = this.getPodcast();\n  \n  // podcasts: any = [\n  //   // {\n  //   //   audio: new Audio(\"assets/audio/Toju.mp3\"),\n  //   //   // audio: new Audio(\"https://firebasestorage.googleapis.com/v0/b/tesa-radio.appspot.com/o/podcasts%2FToju.mp3?alt=media&token=e1582f05-a1f7-4d31-8e6c-f6c16c1a7a53\"),\n  //   //   author: \"Usimeke Ushoro\",\n  //   //   title: \"Toju\",\n  //   //   CurrentTime: null,\n  //   //   duration: null\n  //   // },\n  //   // {\n  //   //   audio: new Audio(\"assets/audio/Jeho.mp3\"),\n  //   //   // audio: new Audio(\"https://firebasestorage.googleapis.com/v0/b/tesa-radio.appspot.com/o/podcasts%2FJeho.mp3?alt=media&token=08f86ac3-7e6e-49fa-b13e-68b4f9bd89a1\"),\n  //   //   author: \"Mulitiple\",\n  //   //   title: \"MixTape\",\n  //   //   CurrentTime: null,\n  //   //   duration: null\n  //   // },\n\n  // ];\n\n  constructor(\n    private router: Router,\n    private StorageService: StorageService,\n    private DatabaseService: DatabaseService,\n  ) { }\n\n  play(id) {\n     \n    if (this.playingPodcastID === null) {\n      // if(this.podcasts[id].audio.readyState > 0) {\n        document.getElementById('playBTN'+id).style.display = \"none\";\n        document.getElementById('pauseBTN'+id).style.display = \"inline\";\n\n        this.podcasts[id].audio.play();\n        this.playingPodcastID = id;\n\n        this.StorageService.store(\"playing\", {\n          // Radio: \"played\",\n          Status: \"played\",\n          PlayingMedia: \"podcast\",\n          podcastsID: id\n        });\n      // }\n    } else {\n      this.pause(this.playingPodcastID);\n\n      // if(this.podcasts[id].audio.readyState > 0) {\n        document.getElementById('playBTN'+id).style.display = \"none\";\n        document.getElementById('pauseBTN'+id).style.display = \"inline\";\n\n        this.podcasts[id].audio.play();\n        this.playingPodcastID = id;\n\n        this.StorageService.store(\"playing\", {\n          // Radio: \"played\",\n          Status: \"played\",\n          PlayingMedia: \"podcast\",\n          podcastsID: id\n        });\n        \n      // }\n    }\n    \n  }\n\n  pause(id) {\n    if (this.router.url === \"/podcast\") {\n      document.getElementById('playBTN'+id).style.display = \"inline\";\n      document.getElementById('pauseBTN'+id).style.display = \"none\";\n\n    } else {\n      this.StorageService.store(\"outsidePodcast\", {\n        pauseFrmOutside: true,\n        Status: \"podcast\",\n        podcastsID: id\n      });\n    }\n\n    this.playingPodcastID = id;\n    this.podcasts[id].audio.pause();\n  }\n\n  getPodcast() {\n    let result = null;\n    this.DatabaseService.getRealtimeDBdata(\"podcasts\").then(\n      response => {\n        let res: any = response;\n        let arr: any = [];\n        let k: keyof typeof res;\n        let i = Object.keys(res).length - 1;    \n        for (const k in res) {\n          if (Object.prototype.hasOwnProperty.call(res, k)) {\n            const element = res[k];\n            let podcast = {\n              audio: new Audio(element.audio),\n              author: element.author,\n              title: element.title,\n              CurrentTime: null,\n              duration: null,\n            };\n            arr.unshift(podcast);\n          }\n          i--;\n        }\n        this.podcasts = arr;\n        result = arr;\n        console.log(this.podcasts);\n      },\n\n      err => {\n        console.log(err);\n        \n      }\n    );\n    return result;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DatabaseService } from './database.service';\nimport { StorageService } from './storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShowsService {\n\n  playingID: any = null;\n\n  shows: any = this.getShows();\n\n  // shows = [\n  //   // {\n  //   //   audio: new Audio(\"assets/audio/Toju.mp3\"),\n  //   //   // audio: new Audio(\"https://firebasestorage.googleapis.com/v0/b/tesa-radio.appspot.com/o/podcasts%2FToju.mp3?alt=media&token=e1582f05-a1f7-4d31-8e6c-f6c16c1a7a53\"),\n  //   //   showImg: \"/assets/images/about.jpeg\",\n  //   //   showTitle: \"Awesome Title\",\n  //   //   showDescription: \"Keep close to Nature's heart... and break clear away, once in awhile, and climb a mountain or spend a week in the woods. Wash your spirit clean.\",\n  //   // },\n  //   // {\n  //   //   audio: new Audio(\"assets/audio/Jeho.mp3\"),\n  //   //   // audio: new Audio(\"https://firebasestorage.googleapis.com/v0/b/tesa-radio.appspot.com/o/podcasts%2FJeho.mp3?alt=media&token=08f86ac3-7e6e-49fa-b13e-68b4f9bd89a1\"),\n  //   //   showImg: \"/assets/images/about.jpeg\",\n  //   //   showTitle: \"Awesome Title\",\n  //   //   showDescription: \"Keep close to Nature's heart... and break clear away, once in awhile, and climb a mountain or spend a week in the woods. Wash your spirit clean.\",\n  //   // }\n  // ];\n\n  constructor(\n    private router: Router,\n    private StorageService: StorageService,\n    private DatabaseService: DatabaseService,\n    ) { }\n\n  play(id) {\n     \n    if (this.playingID === null) {\n      document.getElementById('sPlayBTN'+id).style.display = \"none\";\n      document.getElementById('sPauseBTN'+id).style.display = \"block\";\n      document.getElementById('sWave'+id).style.display = \"block\";\n\n      this.shows[id].audio.play();\n      this.playingID = id;\n\n      this.StorageService.store(\"playing\", {\n        Status: \"played\",\n        PlayingMedia: \"show\",\n        showsID: id\n      });\n    } else {\n      this.pause(this.playingID);\n\n      document.getElementById('sPlayBTN'+id).style.display = \"none\";\n      document.getElementById('sPauseBTN'+id).style.display = \"block\";\n      document.getElementById('sWave'+id).style.display = \"block\";\n\n      this.shows[id].audio.play();\n      this.playingID = id;\n\n      this.StorageService.store(\"playing\", {\n        // Radio: \"played\",\n        Status: \"played\",\n        PlayingMedia: \"show\",\n        showsID: id\n      });\n    }\n    \n  }\n\n  pause(id) {\n    if (this.router.url === \"/shows\") {\n      document.getElementById('sPlayBTN'+id).style.display = \"block\";\n      document.getElementById('sPauseBTN'+id).style.display = \"none\";\n      document.getElementById('sWave'+id).style.display = \"none\";\n\n    } else {\n      this.StorageService.store(\"outsideShow\", {\n        pauseFrmOutside: true,\n        Status: \"show\",\n        showsID: id\n      });\n    }\n    this.playingID = id;\n    this.shows[id].audio.pause();\n  }\n\n  getShows() {\n    let result = null;\n    this.DatabaseService.getRealtimeDBdata(\"shows\").then(\n      response => {\n        let res: any = response;\n        let arr: any = [];\n        let k: keyof typeof res;\n        let i = Object.keys(res).length - 1;    \n        for (const k in res) {\n          if (Object.prototype.hasOwnProperty.call(res, k)) {\n            const element = res[k];\n            let show = {\n              audio: new Audio(element.audio),\n              showImg: element.showImg,\n              showTitle: element.showTitle,\n              showDescription: element.showDescription,\n            };\n            arr.unshift(show);\n          }\n          i--;\n        }\n        this.shows = arr;\n        result = arr;\n        console.log(this.shows);\n      },\n\n      err => {\n        console.log(err);\n\n      }\n    );\n    return result;\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}