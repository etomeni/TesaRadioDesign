{"version":3,"file":"src_app_pages_demand_demand_module_ts.js","mappings":"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","sources":["./src/app/pages/demand/demand-routing.module.ts","./src/app/pages/demand/demand.module.ts","./src/app/pages/demand/demand.page.ts","./src/app/pages/demand/demand.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DemandPage } from './demand.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DemandPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DemandPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DemandPageRoutingModule } from './demand-routing.module';\n\nimport { DemandPage } from './demand.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    DemandPageRoutingModule\n  ],\n  declarations: [DemandPage]\n})\nexport class DemandPageModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n// import { AngularFireDatabase } from '@angular/fire/compat/database';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AlertController } from '@ionic/angular';\nimport { DatabaseService } from 'src/app/services/database.service';\nimport { SendmailService } from 'src/app/services/sendmail.service';\n// import { StorageService } from 'src/app/services/storage.service';\n\n@Component({\n  selector: 'app-demand',\n  templateUrl: './demand.page.html',\n  styleUrls: ['./demand.page.scss'],\n})\nexport class DemandPage implements OnInit {\n\n  demandForm: FormGroup;\n  submitted = false;\n  sent = false;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public alertController: AlertController,\n    private http: HttpClient,\n    // services here\n    // private StoreService: StorageService,\n    private firebaseDataBase: DatabaseService,\n    private sendmailService: SendmailService\n  ) { }\n\n  ngOnInit() {\n    this.demandForm = this.formBuilder.group({\n      name: ['', [\n        Validators.required,\n        Validators.minLength(3)\n      ]],\n\n      email: ['', [\n        Validators.required,\n        Validators.minLength(5),\n        Validators.email,\n        Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$'),\n      ]],\n\n      category: ['', [\n        Validators.required,\n        Validators.minLength(5),\n        // Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$'),\n      ]],\n\n      phoneNumber: ['', [\n        Validators.required,\n        Validators.minLength(10),\n        Validators.pattern('^[0-9+]+$'),\n      ]],\n\n      message: ['', [\n        Validators.required,\n        Validators.minLength(10)\n      ]]\n\n    });\n\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.demandForm.valid) {\n      try {\n        var today = new Date();\n        var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n        var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n        var dateTime = date+' '+time;\n\n        // save in firebase real time database\n        let demandFormPath = \"Demand Show/\" + dateTime;\n        let demandFormData = {\n          name: this.demandForm.value.name,\n          category: this.demandForm.value.category,\n          phoneNumber: this.demandForm.value.phoneNumber,\n          Message: this.demandForm.value.message,\n          date: date,\n          time: time,\n        }\n        let mailJSparam = {\n          page: \"Demand for Show\",\n          from_name: this.demandForm.value.name,\n          reply_to: this.demandForm.value.email,\n          from_phone_number: this.demandForm.value.phoneNumber,\n          cat_resip_title: '',\n          cat_resip: this.demandForm.value.category,\n          // msg_descip_title: 'Shout out to <br> ',\n          msg_descip_title: '',\n          msg_descip: this.demandForm.value.message,\n          to_name: \"Team Tesa\"\n        }\n        \n        this.firebaseDataBase.saveToRealtimeDataDB(demandFormPath, demandFormData).then( () => {\n          this.sent = true;\n\n          this.sendmailService.demandShows(mailJSparam).then(\n            res => {\n              this.presentAlert(\"Show Demand Request sent successfully!!!\");\n            },\n            rejects => {\n              this.presentAlert(\"Ooops, unable to deliver request message\");\n            }\n          ).catch(()=> {\n            this.presentAlert(\"Ooops, unable to deliver request message\");\n          });\n\n          // this.sendMail(this.demandForm.value);\n          this.submitted = false;\n        }).catch( err => {\n          this.presentAlert(\"An error ocurred while sending the request\");\n          this.submitted = false;\n          console.log(err);\n        });\n        \n      } catch (error) {\n        this.presentAlert(\"Ooops, an error just Orcured, please check your connection and try again.\");\n        this.submitted = false;\n        console.log(error);\n      }\n    }\n  }\n\n  async sendMail(demandFormData: any) {\n\n    let message = \"Hello Team TESA, <br><b>\" + demandFormData.name + \"</b> just contacted us with this message below <br><br>\" + \n                  demandFormData.message + \"<br><br> Please do well to attend to it on time. <br><br> Thanks. <br> Team TESA\";\n\n    let postParam = JSON.stringify({\n      receiverEmail: \"Sundaywht@gmail.com\",\n      appName: \"Tesa Radio App\",\n      subject: \"Clients's Feedback From \" + demandFormData.name,\n      userName: demandFormData.name,\n      userEmail: demandFormData.email,\n      message: demandFormData.message\n    });\n    \n    // const link = 'http://127.0.0.1/sendMailwithIonic/sendMail.php';\n    const link = 'https://audiomackstream.com/sendMailwithIonic/sendMail.php';\n\n    let response: any = this.http.post(link, postParam).subscribe( res => {\n      console.log(res);      \n    });\n\n  }\n\n  async presentAlert(message) {\n    const alert = await this.alertController.create({\n      cssClass: 'alert-class',\n      // subHeader: message,\n      // header: message,\n      message: message,\n      // buttons: ['OK']\n    });\n    await alert.present();\n  }\n\n}\n","export default \"<ion-header [translucent]=\\\"false\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <!-- <ion-title>shoutOut</ion-title> -->\\n    <h1 style=\\\"margin: 0; padding-left: 10px;\\\">\\n      <span style=\\\"color: #de2341;\\\">Tesa </span> <span style=\\\"color: white;\\\">Radio</span>\\n    </h1>\\n\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-menu-button menu=\\\"main-menu\\\" style=\\\"color: white;\\\"></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n\\n  <ion-grid class=\\\"wrapper-outter\\\">\\n    <ion-row>\\n      <ion-col size=\\\"12\\\" class=\\\"yCenter\\\">\\n        <div class=\\\"wrapper-inner\\\">\\n          \\n          <div>\\n            <h2 style=\\\"padding: 7px;\\\"> <span style=\\\"color: #de2341;\\\"> Demand </span> for a show!</h2>\\n\\n              <form [formGroup]=\\\"demandForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                <div data-info=\\\"name input\\\">\\n                  <ion-item lines=\\\"none\\\" style=\\\"border-radius: 10px 10px 0 0;\\\">\\n                    <ion-label position=\\\"floating\\\">Full Name(s) <ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n                    <ion-input required minlength=\\\"3\\\" formControlName=\\\"name\\\" autocomplete=\\\"name\\\" type=\\\"text\\\"></ion-input>\\n                  </ion-item>\\n      \\n                  <span class=\\\"error ion-padding\\\" \\n                    *ngIf=\\\"demandForm.get('name').touched && demandForm.get('name').dirty && demandForm.get('name').invalid\\\"\\n                  >\\n                    <span class=\\\"error ion-padding\\\" *ngIf=\\\"demandForm.get('name').errors?.required\\\">\\n                      Please Enter your name\\n                    </span>\\n                    <span class=\\\"error ion-padding\\\" *ngIf=\\\"demandForm.get('name').errors?.minlength\\\">\\n                      Name characters should be more than 3 characters.\\n                    </span>\\n                  </span>\\n                </div>\\n\\n                <div data-info=\\\"email input\\\">\\n                  <ion-item lines=\\\"none\\\">\\n                    <ion-label position=\\\"floating\\\">E-Mail <ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n                    <ion-input required minlength=\\\"5\\\" formControlName=\\\"email\\\" type=\\\"email\\\" autocomplete=\\\"email\\\"></ion-input>\\n                  </ion-item>\\n\\n                  <span class=\\\"error ion-padding\\\" \\n                    *ngIf=\\\"demandForm.get('email').touched && demandForm.get('email').dirty && demandForm.get('email').invalid\\\"\\n                  >\\n                    <span class=\\\"error ion-padding\\\" *ngIf=\\\"demandForm.get('email').errors?.required\\\">\\n                      Please Enter your Email address.\\n                    </span>\\n                    <span class=\\\"error ion-padding\\\" *ngIf=\\\"demandForm.get('email').errors?.pattern || demandForm.get('email').errors?.email\\\">\\n                      Incorrect Email address.\\n                    </span>\\n                  </span>\\n                </div>\\n                \\n                <div data-info=\\\"Phone-Number input\\\">\\n                  <ion-item lines=\\\"none\\\">\\n                    <ion-label position=\\\"floating\\\">Phone Number <ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n                    <ion-input required minlength=\\\"10\\\" formControlName=\\\"phoneNumber\\\" type=\\\"tel\\\" autocomplete=\\\"tel\\\"></ion-input>\\n                  </ion-item>\\n\\n                  <span class=\\\"error ion-padding\\\" \\n                    *ngIf=\\\"demandForm.get('phoneNumber').touched && demandForm.get('phoneNumber').dirty && demandForm.get('phoneNumber').invalid\\\"\\n                  >\\n                    <span class=\\\"error\\\" *ngIf=\\\"demandForm.get('phoneNumber').errors?.required;\\\">\\n                      Please Enter your Phone Number.\\n                    </span>\\n                    <span class=\\\"error\\\" *ngIf=\\\"demandForm.get('phoneNumber').errors?.pattern || demandForm.get('phoneNumber').errors?.minlength;\\\">\\n                      Phone Number not correct.\\n                    </span>\\n                  </span>\\n                </div>\\n\\n                <div data-info=\\\"Show-Category input\\\">\\n                  <ion-item lines=\\\"none\\\">\\n                    <ion-label position=\\\"floating\\\">Show Category or tag <ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n                    <ion-input required minlength=\\\"5\\\" formControlName=\\\"category\\\" type=\\\"text\\\"></ion-input>\\n                  </ion-item>\\n\\n                  <span class=\\\"error ion-padding\\\" \\n                    *ngIf=\\\"demandForm.get('category').touched && demandForm.get('category').dirty && demandForm.get('category').invalid\\\"\\n                  >\\n                    <span class=\\\"error\\\" *ngIf=\\\"demandForm.get('category').errors?.required;\\\">\\n                      Please Enter a category or tag for the show.\\n                    </span>\\n                    <span class=\\\"error\\\" *ngIf=\\\"demandForm.get('category').errors?.minlength;\\\">\\n                      The category or tag for the show must be more than 5 characters.\\n                    </span>\\n                  </span>\\n                </div>\\n                \\n                <div data-info=\\\"Message input\\\">\\n                  <ion-item lines=\\\"none\\\" style=\\\"border-radius: 0 0 10px 10px;\\\">\\n                    <ion-label position=\\\"floating\\\">Show Description <ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n                    <ion-textarea formControlName=\\\"message\\\" class=\\\"messageText\\\" required minlength=\\\"10\\\" placeholder=\\\"Please give detail description of the show...\\\"></ion-textarea>\\n                  </ion-item>\\n\\n                  <span class=\\\"error ion-padding\\\" \\n                    *ngIf=\\\"demandForm.get('message').touched && demandForm.get('message').dirty && demandForm.get('message').invalid\\\"\\n                  >\\n                    <span class=\\\"error\\\" *ngIf=\\\"demandForm.get('message').errors?.required;\\\">\\n                      Please Enter Full Description of the Show.\\n                    </span>\\n                    <span class=\\\"error\\\" *ngIf=\\\"demandForm.get('message').errors?.minlength;\\\">\\n                      Your description is too short, please drop a comprehensive description of the Show.\\n                    </span>\\n                  </span>\\n                </div>\\n\\n                <div *ngIf=\\\"sent\\\" style=\\\"background-color: #de2341; color: white; text-align: center; border-radius: 10px;\\\">\\n                  <p style=\\\"padding-top: 15px; padding-bottom: 15px;\\\">\\n                    Show Demand Request sent successfully!!!\\n                  </p>\\n                </div>\\n\\n                <ion-button block type=\\\"submit\\\" [disabled]=\\\"demandForm.invalid\\\" mode=\\\"md\\\" style=\\\"--background: #de2341;\\\">\\n                  Send Demand <i *ngIf=\\\"submitted\\\" class=\\\"loader\\\"></i>\\n                </ion-button>\\n              </form>\\n          </div>\\n\\n        </div>\\n\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n</ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}